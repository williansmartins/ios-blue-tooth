# Define o nome do workflow que aparecerá no Codemagic
workflows:
  ios-app-build:
    name: Build iOS App with Expo (RN)

    # Tipo de instância para o build. mac_mini_m2 é recomendado para iOS.
    instance_type: mac_mini_m2

    # Se você não tem variáveis de ambiente seguras customizadas (como EAS_TOKEN)
    # configuradas no Codemagic UI, REMOVA TODA A SEÇÃO 'environment:'
    # Se você tem, mantenha-a e liste-as aqui:
    # environment:
    #   eas_token: $EAS_TOKEN # Exemplo: SE VOCÊ CONFIGUROU $EAS_TOKEN NO CODEMAGIC UI

    # Seções de scripts que definem os passos do build
    scripts:
      # 1. Configurar Node.js (AGORA ESSA SERÁ A ÚNICA ETAPA QUE INSTALA O NODE)
      - name: Configurar Node.js (LTS)
        script: |
          echo "********** INICIANDO CONFIGURAÇÃO DO NODE.JS **********"
          echo "Verificando se 'n' está instalado e instalando se necessário..."
          npm install -g n || { echo "Falha ao instalar 'n'. Verifique permissões ou conectividade."; exit 1; }
          
          echo "Tentando instalar a versão LTS do Node.js usando 'n'..."
          # MUDANÇA AQUI: de '18.x' para 'lts'
          n lts || { echo "Falha ao instalar Node.js LTS usando 'n'. Verifique logs acima para detalhes."; exit 1; }
          
          echo "Verificando versões instaladas..."
          node -v
          npm -v
          echo "********** CONFIGURAÇÃO DO NODE.JS CONCLUÍDA **********"

      # 2. Instalar dependências do projeto (npm ou yarn)
      - name: Instalar dependências do projeto
        script: |
          echo "Instalando dependências do projeto..."
          npm install # Ou 'yarn install' se você usa yarn no seu projeto
          echo "Dependências instaladas."

      # 3. Configurar EAS CLI e fazer login (se necessário para seu workflow EAS)
      # Remova ou comente esta seção se você não estiver usando EAS CLI ou não tiver as variáveis de ambiente configuradas
      - name: Fazer login no EAS CLI
        script: |
          echo "Configurando e fazendo login no EAS CLI..."
          npm install -g eas-cli # Garante que o EAS CLI está instalado
          # **CUIDADO:** Se você não tem $EAS_TOKEN configurado no Codemagic UI, essa linha vai falhar.
          # Se não for usar EAS agora, COMENTE ou REMOVA esta linha:
          eas login --token $EAS_TOKEN # RECOMENDADO para CI/CD
          echo "Login no EAS CLI concluído."

      # 4. Executar o build iOS com EAS CLI
      # Remova ou comente esta seção se você não estiver usando EAS CLI para o build
      - name: Criar Build iOS
        script: |
          echo "Iniciando build iOS com EAS CLI..."
          # **CUIDADO:** Se você não tem EAS CLI configurado/logado, essa linha vai falhar.
          # Se não for usar EAS agora, COMENTE ou REMOVA esta linha:
          eas build -p ios --profile production --non-interactive
          echo "Build iOS iniciado. O artefato .ipa será gerado pelo EAS."

    # Define onde o Codemagic deve procurar os artefatos gerados
    artifacts:
      - $CM_BUILD_DIR/**/*.ipa 
      - /tmp/eas-build-archive/*.ipa
      - ~/.npm/_logs/*.log

    # Notificações (opcional)
    # notifications:
    #   email:
    #     recipients:
    #       - seu_email@exemplo.com
    #     success:
    #       - email
    #     failure:
    #       - email